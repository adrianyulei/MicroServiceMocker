package com.epcc.aliaServiceImpl;import com.epcc.clearing.ins.entity.recon.BankBatchData;import com.epcc.clearing.ins.entity.recon.ReconClearingIns;import com.epcc.clearing.ins.entity.recon.ReconDataResponse;import com.epcc.dubbo.result.Result;import com.epcc.generic.AbstractServiceMock;import java.util.ArrayList;import java.util.List;/** * Created by Alia on 2016/12/17. */public class RenServiceImp extends AbstractServiceMock {    //String s ：service 调用的方法名称    // String[] strings：参数类型数组    // Object[] objects：参数值数组    @Override    public Object mockerDefiniton(String s, String[] strings, Object[] objects) {        System.out.print("\n\n\n\n======get RenServiceImp===========\n\n\n\n\n");        if ("getBankClearingData".equals(s)) {            if (null != strings) {                for (String str : strings) {                    System.out.println("=============>入参类型为：" + str + "<===========");                }                for (Object o : objects) {                    System.out.println("=============>入参值为：" + o + "<===========");                }            }            return getBankData1();        }        return null;    }    private Result<ReconDataResponse> getBankData1() {        ReconDataResponse reconDataResponse = new ReconDataResponse();        reconDataResponse.setCreditTransAmt(1234);        reconDataResponse.setDebitTransAmt(4567);        reconDataResponse.setTotalClearNum(2);        reconDataResponse.setCcy("CNY");        List<ReconClearingIns> reconClearingInsList = new ArrayList<ReconClearingIns>();        ReconClearingIns ins = new ReconClearingIns();        ins.setMsgId("msgid");        ins.setDebitCreditFlag("D");        ins.setTransAmount(12345);        ReconClearingIns ins2 = new ReconClearingIns();        ins2.setMsgId("msgid");        ins2.setDebitCreditFlag("C");        ins2.setTransAmount(67890);        List<BankBatchData> batchNoList = new ArrayList<BankBatchData>();        BankBatchData batch = new BankBatchData();        batch.setBatchNo("B201702090001");        batch.setDebitCreditFlag("D");        batch.setTransAmount(100);        batchNoList.add(batch);        BankBatchData batch2 = new BankBatchData();        batch2.setBatchNo("B201702090002");        batch2.setDebitCreditFlag("C");        batch2.setTransAmount(100);        batchNoList.add(batch2);        ins.setBatchNoList(batchNoList);        ins2.setBatchNoList(batchNoList);        reconClearingInsList.add(ins);        reconClearingInsList.add(ins2);        reconDataResponse.setReconClearingInsList(reconClearingInsList);        Result<ReconDataResponse> result = new Result<ReconDataResponse>(reconDataResponse);        return result;    }    private Result<ReconDataResponse> getBankData2() {        ReconDataResponse reconDataResponse = new ReconDataResponse();        reconDataResponse.setCreditTransAmt(123411);        reconDataResponse.setDebitTransAmt(456711);        reconDataResponse.setTotalClearNum(2);        reconDataResponse.setCcy("CNY");        List<ReconClearingIns> reconClearingInsList = new ArrayList<ReconClearingIns>();        ReconClearingIns ins = new ReconClearingIns();        ins.setMsgId("msgid");        ins.setDebitCreditFlag("D");        ins.setTransAmount(1234511);        ReconClearingIns ins2 = new ReconClearingIns();        ins2.setMsgId("msgid");        ins2.setDebitCreditFlag("C");        ins2.setTransAmount(67890);        List<BankBatchData> batchNoList = new ArrayList<BankBatchData>();        BankBatchData batch = new BankBatchData();        batch.setBatchNo("B201702090001");        batch.setDebitCreditFlag("D");        batch.setTransAmount(10011);        batchNoList.add(batch);        BankBatchData batch2 = new BankBatchData();        batch2.setBatchNo("B201702090002");        batch2.setDebitCreditFlag("C");        batch2.setTransAmount(10011);        batchNoList.add(batch2);        ins.setBatchNoList(batchNoList);        ins2.setBatchNoList(batchNoList);        reconClearingInsList.add(ins);        reconClearingInsList.add(ins2);        reconDataResponse.setReconClearingInsList(reconClearingInsList);        Result<ReconDataResponse> result = new Result<ReconDataResponse>(reconDataResponse);        return result;    }}